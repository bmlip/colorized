### A Pluto.jl notebook ###
# v0.20.13

#> [frontmatter]
#> image = "https://i.imgur.com/AUaQapv.png"
#> title = "Mini: Laplace Approximation"
#> description = "Deep-dive into the mathematical technique used to approximate complicated integrals."

using Markdown
using InteractiveUtils

# ╔═╡ 18639f03-2f8d-4781-b7e2-483979e3d208
using PlutoUI, PlutoTeachingTools

# ╔═╡ 9021f1a2-276c-43f7-93c0-cdc1f37761d3
md"""
# The Laplace Approximation

"""

# ╔═╡ 1f47354d-84a5-49c7-b9ea-8adeb8c38688
PlutoUI.TableOfContents()

# ╔═╡ 9e43ec14-b13f-41f4-a21f-1f526d72bbfd
md"""
When deriving results in Bayesian Machine Learning analytically, you will often end up with integrals that are difficult – or even impossible – to solve. This is unfortunate, because calculating integrals with a computer can be very difficult to do both accurately and efficiently.

The central idea of the Laplace approximation is to approximate a (possibly unnormalized) distribution ``f(z)`` by a Gaussian distribution ``q(z)``. By substituting ``q`` for ``f`` in an integral, we get an approximate result that is easier to solve analytically.
"""

# ╔═╡ 6246baef-cfee-4de3-bbcb-ff0768381a48
md"""
## Main result
"""

# ╔═╡ f7d34f2f-6515-4d50-9896-8663ab03a101
md"""
We first give the result, followed by the derivation. The **Laplace approximation** of a real-valued function ``f(z)`` is given by:

```math
\begin{align*}
f(z) \approx q(z) = f(z_0) \exp\left( - \frac{1}{2} (z-z_0)^T A (z-z_0)\right) 
\end{align*}
```
where
```math
\begin{align*}
z_0 &= \arg\max_z \left( \log f(z)\right) \\
A &= - \nabla \nabla \left. \log f(z) \right|_{z=z_0} \tag{B-4.132}
\end{align*}
```

In Eq. B-4.132, the precision matrix ``A`` is the (negative of) [Hessian matrix](https://en.wikipedia.org/wiki/Hessian_matrix), comprising second-order derivatives of ``f(z)``, evaluated at ``z=z_0``.  

"""

# ╔═╡ c3c5f458-2658-460a-9efd-b4fa4c2d9d87
md"""
The Laplace approximation is commonly used to approximate intractable integrals by replacing (part of) the integrand with a Gaussian distribution centered at its mode.

In Bayesian modeling, the Laplace approximation is particularly useful for approximating integrals involved in computing **Bayesian evidence** and **predictive distributions**.

"""

# ╔═╡ 3a6633cc-4019-4f3a-a01d-66acb8fb5689
md"""
### Example

"""

# ╔═╡ 4f0474b0-84bd-44b5-94da-5cfb5f2fb554
TODO("This example needs to be generated by  code")

# ╔═╡ cdcee303-54b0-4038-a4bb-ea6e150613bf
html"""<img src="https://github.com/bmlip/course/blob/v2/assets/figures/Figure4.14a.png?raw=true" style="max-width: 500px" >"""

# ╔═╡ 908385ad-2705-4d31-9a6a-53a7066818e9
md"""

_(Bishop fig.4.14a)_ Laplace approximation (in red) to the distribution ``p(z)\propto \exp(-z^2/2)\sigma(20z+4)``, where ``\sigma(a)=1/(1+e^{-a})``. The Laplace approximation is centered on the mode of ``p(z)``.

"""

# ╔═╡ 6d3faf15-5377-4b54-ac2b-410ecf868f63
md"""
## Working out the Numerics

Assume that we want to approximate a distribution ``f(z)`` by a Gaussian distribution ``q(z)``.

Note that, if ``q(z)`` is a Gaussian distribution, then ``\log q(z)`` is a second-order polynomial in ``z``. We will find the Gaussian by fitting a parabola to ``\log f(z)``. 

"""

# ╔═╡ 4b7476e4-c67a-4f1d-a7bf-26e49083c93c
md"""
#### estimation of mean

The mean, ``z_0 = \int z q(z) \mathrm{d}z``, of the Gaussian ``q(z)`` is placed on the mode of ``\log f(z)``, i.e., 

```math
z_0 = \arg\max_z \left( \log f(z)\right)  \tag{B-4.126}
```

"""

# ╔═╡ 1b8a99c7-ea73-4994-a2f1-19952594d9fc
md"""
#### estimation of precision matrix

Note that since ``\nabla \log f(z) = \frac{1}{f(z)}\nabla f(z)`` and the gradient ``\nabla \left. f(z) \right|_{z=z_0}`` vanishes at the mode ``z=z_0``, we can (Taylor) expand ``\log f(z)`` around ``z=z_0`` as 

```math
\begin{align*}
\log f(z) &\approx \log f(z_0) + \overbrace{\left(\nabla \log f(z_0)\right)^T (z-z_0)}^{=0 \text{ at }z=z_0} + \ldots \\
&\qquad + \frac{1}{2} (z-z_0)^T \left(\nabla \nabla \log f(z_0)\right) (z-z_0) \\
  &= \log f(z_0) - \frac{1}{2} (z-z_0)^T A (z-z_0) \tag{B-4.131}
\end{align*}
```

where the [Hessian matrix](https://en.wikipedia.org/wiki/Hessian_matrix) ``A`` is defined by

```math
A = - \nabla \nabla \left. \log f(z) \right|_{z=z_0} \tag{B-4.132}
```

The Hessian matrix is a square matrix of second-order partial derivatives of a scalar-valued function. 

Note: In much of the literature, the Hessian of ``f(z)`` is defined as
``H = \nabla \nabla \left. \log f(z) \right|_{z=z_0}``
without a minus sign. However, in [Bishop PRML, eq. B-4.132](https://www.microsoft.com/en-us/research/wp-content/uploads/2006/01/Bishop-Pattern-Recognition-and-Machine-Learning-2006.pdf#page=235), the minus sign is included in the definition for the Hessian ``A``. For consistency with that source, we adopt the same convention here.
"""

# ╔═╡ eae9f0d4-db52-4370-ad99-bb1fb14ea983
md"""
#### Laplace approximation construction

After taking exponentials in eq. B-4.131, we obtain

```math
f(z) \approx f(z_0) \exp\left( - \frac{1}{2} (z-z_0)^T A (z-z_0)\right) 
```

"""

# ╔═╡ 9026b9ff-5f36-4ced-b5da-47eb26c8f602
md"""
(end derivation of Laplace Approximation)

If ``f(z)`` is a normalized probability distribution, then we can identify ``q(z)`` as

```math
q(z) = \mathcal{N}\left( z\,|\,z_0, A^{-1}\right) \tag{B-4.134}
```

with ``z_0`` and ``A`` defined by eqs. B-4.126 and B-4.132. 

All we have done up to now is approximate a function ``f(z)`` by a Gaussian ``q(z)``. This procedure is called the **Laplace Approximation**. Often, the required integrals (for Bayesian marginalization) can be approximately computed if we replace ``f(z)`` by ``q(z)``. 

"""

# ╔═╡ 8fda5517-9c76-4745-b9ef-2522ebf5f435
md"""
# Example: Bayesian Logistic Regression
"""

# ╔═╡ 8286b631-e425-4752-af11-cf47ffedaed0
md"""
## A Numerical Issue

In the [Bayesian Logistic Regression lecture](https://bmlip.github.io/course/lectures/Discriminative%20Classification.html#Discriminative-Classification), we have a numerical problem when we attempt to compute the predictive class distribution 

```math
\begin{align*}
p(y_\bullet = 1 \mid x_\bullet, D) &= \int \sigma(w^T x_\bullet) \cdot p(w\,|\, D) \,\mathrm{d}w \tag{B-4.145}
\end{align*}
```

where ``\sigma`` is the logistic function, and 


```math
\begin{align*}
\underbrace{p(w | D)}_{\text{posterior}} \propto  \underbrace{\mathcal{N}(w \,|\, m_0, S_0)}_{\text{prior}} \cdot \underbrace{\prod_{n=1}^N \sigma\left( (2y_n-1) w^T x_n\right)}_{\text{likelihood}}  \tag{B-4.142}
\end{align*}
```

Due to the highly non-linear likelihood in terms of the weights ``w``, the predictive distribution cannot be computed in closed form. 
We proceed in two steps:

- First, we approximate the posterior ``p(w | D)`` with a Gaussian distribution using the Laplace approximation.

- Next, we substitute this Gaussian approximation into the predictive expression (Eq. B.4.145) to estimate the class probability for a new observation. While the resulting integral remains intractable, we will derive a closed-form approximation to the posterior class probability using a second-level approximation.
"""

# ╔═╡ 71c7d88e-d1b2-4edc-85e0-d9eee0501568
md"""
## A (Gaussian) Laplace Approximation to the Weights Posterior

Since we have a differentiable expression for ``\log p(w | D)``, it is straightforward to compute the gradient and Hessian:

```math
\begin{align*}
\nabla_w \log p(w | D) &= S_0^{-1}\cdot \left(m_0-w\right) + \sum_n (2y_n-1) (1-\sigma_n) x_n \\
- \nabla\nabla_w \log p(w | D) &= S_0^{-1} + \sum_n \sigma_n (1-\sigma_n) x_n x_n^T \tag{B-4.143}
\end{align*}
```

where we used shorthand ``\sigma_n`` for ``\sigma\left( (2y_n-1) w^T x_n\right)``. 

"""

# ╔═╡ 90be0711-eab3-4dd1-bc29-9c1e359844aa
details("Click for proof", 
md"""

We will start with the posterior

```math
\begin{align*}
\underbrace{p(w | D)}_{\text{posterior}} \propto  \underbrace{\mathcal{N}(w \,|\, m_0, S_0)}_{\text{prior}} \cdot \underbrace{\prod_{n=1}^N \sigma\big( \underbrace{(2y_n-1) w^T x_n}_{a_n}\big)}_{\text{likelihood}}  \tag{B-4.142}
\end{align*}
```

from which it follows that

```math
\begin{align*}
\log p(w | D) \propto  -\frac{1}{2}\log |S_0| -\frac{1}{2} (w-m_0)^T S_0^{-1} (w-m_0) +\sum_n \log \sigma\left( a_n\right) 
\end{align*}
```

and the gradient

```math
\begin{align*}
\nabla_{w}\log p(w | D) &\propto   \underbrace{S_0^{-1} (m_0-w)}_{\text{SRM-5b}} +\sum_n \underbrace{\frac{1}{\sigma(a_n)}}_{\frac{\partial \log \sigma(a_n)}{\partial \sigma(a_n)}} \cdot \underbrace{\sigma(a_n) \cdot (1-\sigma(a_n))}_{\frac{\partial \sigma(a_n)}{\partial a_n}} \cdot \underbrace{(2y_n-1)x_n}_{\frac{\partial a_n}{\partial w} \text{ (see SRM-5a)}}    \\
&=   S_0^{-1} (m_0-w) + \sum_n (2y_n-1) (1-\sigma(a_n)) x_n \quad \text{(gradient)}
 \end{align*}
```

where we used  ``\sigma^\prime(a) = \sigma(a)\cdot (1-\sigma(a))``.

For the Hessian, we continue to differentiate the transpose of the gradient, leading to

```math
\begin{align*}
\nabla\nabla_{w}\log p(w | D) &=  \nabla_{w} \left(S_0^{-1} (m_0-w)\right)^T - \sum_n (2y_n-1) x_n \nabla_{w}\sigma(a_n)^T \\ &=  -S_0^{-1} - \sum_n (2y_n-1) x_n \cdot \underbrace{\sigma(a_n)\cdot (1-\sigma(a_n))}_{\frac{\partial \sigma(a_n)^T}{\partial a_n^T}}\cdot \underbrace{(2y_n-1) x_n^T}_{\frac{\partial a_n^T}{\partial w}} \\
&= -S_0^{-1} - \sum_n \sigma(a_n)\cdot (1-\sigma(a_n))\cdot x_n x_n^T 
\end{align*}
```

since ``(2y_n-1)^2=1`` for ``y_n \in \{0,1\}``.

OK, not as straightforward as promised, but, in principle, this is standard matrix calculus.

""")

# ╔═╡ 2096c0e1-c4ff-48ea-92d7-901600a81478
md"""
We can now use the gradient ``\nabla_w \log p(w | D)`` to find the **mode** ``w_{N}`` of ``\log p(w|D)`` (e.g., by some gradient-based optimization procedure) and then use the Hessian ``-\left. \nabla\nabla_w \log p(w | D)\right|_{w=w_N}``, evaluated at ``w=w_N``, to get the variance of ``q(w)``, leading to a **Gaussian weights posterior**

```math
q(w) = \mathcal{N}\left(w\,|\, w_{N}, S_N\right) \tag{B-4.144}
```

with

```math
S_N^{-1} \triangleq S_0^{-1} + \sum_n \sigma_n (1-\sigma_n) x_n x_n^T \tag{B-4.143}
```

"""

# ╔═╡ fff20a37-b6c3-4d4a-8c38-9d219e1398b8
md"""
## Evaluating the Predictive Distribution

Since the predictive class distribution (Eq. B-4.145) cannot be computed analytically, we proceed by applying the Laplace approximation to the posterior over the weights.

For a new observation ``x_\bullet``, the class probability then evaluates to

```math
\begin{align*}
p(y_\bullet = 1 \mid x_\bullet, D) &= \int p(y_\bullet = 1 \,|\, x_\bullet, w) \cdot p(w\,|\, D) \,\mathrm{d}w \\
  &\approx  \int \sigma(w^T x_\bullet) \cdot \mathcal{N}\left(w \,|\, w_N, S_N\right) \,\mathrm{d}w \tag{B-4.145} \\
&\approx \Phi\left( \frac{\mu_a}{\sqrt(\lambda^{-2} +\sigma_a^2)}\right) \tag{B-4.152}
\end{align*}
```

where 

```math
\begin{align}
\lambda^2 &= \pi / 8 \\
\mu_a  &= w^T_{N} x_\bullet \tag{B-4.149} \\
\sigma_a^2 &= x^T_\bullet S_N x_\bullet \tag{B-4.150}
\end{align}
```
and ``\Phi(x)= \frac{1}{\sqrt(2\pi)}\int_{-\infty}^{x}e^{-t^2/2}\mathrm{d}t`` is the Gaussian cumulative distribution function. 
"""

# ╔═╡ 2db39ee2-b2ae-4da9-b392-3f0cec8d5c5f
details("Click for proof",
md"""

Expression B-4.145 follows from the Laplace approximation of the weight posterior ``p(w|D)``. 

Going from B-4.145 to the closed-form expression in B-4.152 still requires clever tricks. 

First, note that ``w`` appears in ``\sigma(w^T x_\bullet)`` as an inner product, so through substitution of ``a:=w^T x_\bullet``, the expression simplifies to an integral over the scalar ``a`` (see [Bishop PRML, section 4.5.2](https://www.microsoft.com/en-us/research/wp-content/uploads/2006/01/Bishop-Pattern-Recognition-and-Machine-Learning-2006.pdf#page=238) for derivation):

```math
\begin{align*}
p(y_\bullet = 1 \mid x_\bullet, D) &\approx \int \sigma(a) \, \mathcal{N}\left(a\,|\, \mu_a, \sigma_a^2\right) \,\mathrm{d}a \qquad &&\text{(B-4.151)}\\
\mu_a  &= w^T_{N} x_\bullet \qquad &&\text{(B-4.149)}\\
\sigma_a^2 &= x^T_\bullet S_N x_\bullet \qquad &&\text{(B-4.150)}
\end{align*}
```

Secondly, while the integral of the product of a logistic function with a Gaussian is not analytically solvable, the integral of the product of a Gaussian cumulative distribution function (CDF) with a Gaussian *does* have a closed-form solution. Fortunately, 

```math
\Phi(\lambda a) \approx \sigma(a)
```

with the Gaussian CDF ``\Phi(x)= \frac{1}{\sqrt(2\pi)}\int_{-\infty}^{x}e^{-t^2/2}\mathrm{d}t``, ``\lambda^2= \pi / 8`` and ``\sigma(a) = 1/(1+e^{-a})``.    Thus, substituting ``\Phi(\lambda a)`` with ``\lambda^2= \pi / 8`` for ``\sigma(a)`` leads to 

```math
\begin{align*}
p(y_\bullet = 1 \mid x_\bullet, D) &=  \int \sigma(w^T x_\bullet) \cdot p(w|D) \,\mathrm{d}w  \\ 
&\approx \int \underbrace{\Phi(\lambda a)}_{\text{probit function}} \cdot \underbrace{\mathcal{N}\left(a\,|\, \mu_a, \sigma_a^2\right)}_{\text{Gaussian}} \,\mathrm{d}a \\ 
&= \Phi\left( \frac{\mu_a}{\sqrt(\lambda^{-2} +\sigma_a^2)}\right) \tag{B-4.152}
\end{align*}
```
		
"""		
	   
	   )

# ╔═╡ 6cf91cde-9be7-4ee7-9be2-dd1280aa85b0
md"""
Hence, making use of the Laplace approximation, we were able to derive an approximate but **closed-form expression for the predictive class distribution** in a Bayesian logistic regression model.  

"""

# ╔═╡ 5465e414-7512-4730-97e9-ea6337014d9c
md"""
!!! info
	Exam guide: The derivation of the closed-form expression for the predictive class distribution (Eq. B-4.152) involves non-trivial mathematical steps and clever approximations. You are not expected to reproduce this full derivation on the exam without guidance. However, you should have a good understanding of the Laplace approximation and be able to apply it to simpler examples.  

"""

# ╔═╡ 00000000-0000-0000-0000-000000000001
PLUTO_PROJECT_TOML_CONTENTS = """
[deps]
PlutoTeachingTools = "661c6b06-c737-4d37-b85c-46df65de6f69"
PlutoUI = "7f904dfe-b85e-4ff6-b463-dae2292396a8"

[compat]
PlutoTeachingTools = "~0.4.4"
PlutoUI = "~0.7.69"
"""

# ╔═╡ 00000000-0000-0000-0000-000000000002
PLUTO_MANIFEST_TOML_CONTENTS = """
# This file is machine-generated - editing it directly is not advised

julia_version = "1.11.4"
manifest_format = "2.0"
project_hash = "76ab8b73b713e8a99fdd4b01a1edb6667195d203"

[[deps.AbstractPlutoDingetjes]]
deps = ["Pkg"]
git-tree-sha1 = "6e1d2a35f2f90a4bc7c2ed98079b2ba09c35b83a"
uuid = "6e696c72-6542-2067-7265-42206c756150"
version = "1.3.2"

[[deps.ArgTools]]
uuid = "0dad84c5-d112-42e6-8d28-ef12dabb789f"
version = "1.1.2"

[[deps.Artifacts]]
uuid = "56f22d72-fd6d-98f1-02f0-08ddc0907c33"
version = "1.11.0"

[[deps.Base64]]
uuid = "2a0f44e3-6c83-55bd-87e4-b1978d98bd5f"
version = "1.11.0"

[[deps.ColorTypes]]
deps = ["FixedPointNumbers", "Random"]
git-tree-sha1 = "67e11ee83a43eb71ddc950302c53bf33f0690dfe"
uuid = "3da002f7-5984-5a60-b8a6-cbb66c0b333f"
version = "0.12.1"

    [deps.ColorTypes.extensions]
    StyledStringsExt = "StyledStrings"

    [deps.ColorTypes.weakdeps]
    StyledStrings = "f489334b-da3d-4c2e-b8f0-e476e12c162b"

[[deps.CompilerSupportLibraries_jll]]
deps = ["Artifacts", "Libdl"]
uuid = "e66e0078-7015-5450-92f7-15fbd957f2ae"
version = "1.1.1+0"

[[deps.Dates]]
deps = ["Printf"]
uuid = "ade2ca70-3891-5945-98fb-dc099432e06a"
version = "1.11.0"

[[deps.Downloads]]
deps = ["ArgTools", "FileWatching", "LibCURL", "NetworkOptions"]
uuid = "f43a241f-c20a-4ad4-852c-f6b1247861c6"
version = "1.6.0"

[[deps.FileWatching]]
uuid = "7b1f6079-737a-58dc-b8bc-7a2ca5c1b5ee"
version = "1.11.0"

[[deps.FixedPointNumbers]]
deps = ["Statistics"]
git-tree-sha1 = "05882d6995ae5c12bb5f36dd2ed3f61c98cbb172"
uuid = "53c48c17-4a7d-5ca2-90c5-79b7896eea93"
version = "0.8.5"

[[deps.Format]]
git-tree-sha1 = "9c68794ef81b08086aeb32eeaf33531668d5f5fc"
uuid = "1fa38f19-a742-5d3f-a2b9-30dd87b9d5f8"
version = "1.3.7"

[[deps.Hyperscript]]
deps = ["Test"]
git-tree-sha1 = "179267cfa5e712760cd43dcae385d7ea90cc25a4"
uuid = "47d2ed2b-36de-50cf-bf87-49c2cf4b8b91"
version = "0.0.5"

[[deps.HypertextLiteral]]
deps = ["Tricks"]
git-tree-sha1 = "7134810b1afce04bbc1045ca1985fbe81ce17653"
uuid = "ac1192a8-f4b3-4bfe-ba22-af5b92cd3ab2"
version = "0.9.5"

[[deps.IOCapture]]
deps = ["Logging", "Random"]
git-tree-sha1 = "b6d6bfdd7ce25b0f9b2f6b3dd56b2673a66c8770"
uuid = "b5f81e59-6552-4d32-b1f0-c071b021bf89"
version = "0.2.5"

[[deps.InteractiveUtils]]
deps = ["Markdown"]
uuid = "b77e0a4c-d291-57a0-90e8-8db25a27a240"
version = "1.11.0"

[[deps.JSON]]
deps = ["Dates", "Mmap", "Parsers", "Unicode"]
git-tree-sha1 = "31e996f0a15c7b280ba9f76636b3ff9e2ae58c9a"
uuid = "682c06a0-de6a-54ab-a142-c8b1cf79cde6"
version = "0.21.4"

[[deps.LaTeXStrings]]
git-tree-sha1 = "dda21b8cbd6a6c40d9d02a73230f9d70fed6918c"
uuid = "b964fa9f-0449-5b57-a5c2-d3ea65f4040f"
version = "1.4.0"

[[deps.Latexify]]
deps = ["Format", "InteractiveUtils", "LaTeXStrings", "MacroTools", "Markdown", "OrderedCollections", "Requires"]
git-tree-sha1 = "4f34eaabe49ecb3fb0d58d6015e32fd31a733199"
uuid = "23fbe1c1-3f47-55db-b15f-69d7ec21a316"
version = "0.16.8"

    [deps.Latexify.extensions]
    DataFramesExt = "DataFrames"
    SparseArraysExt = "SparseArrays"
    SymEngineExt = "SymEngine"
    TectonicExt = "tectonic_jll"

    [deps.Latexify.weakdeps]
    DataFrames = "a93c6f00-e57d-5684-b7b6-d8193f3e46c0"
    SparseArrays = "2f01184e-e22b-5df5-ae63-d93ebab69eaf"
    SymEngine = "123dc426-2d89-5057-bbad-38513e3affd8"
    tectonic_jll = "d7dd28d6-a5e6-559c-9131-7eb760cdacc5"

[[deps.LibCURL]]
deps = ["LibCURL_jll", "MozillaCACerts_jll"]
uuid = "b27032c2-a3e7-50c8-80cd-2d36dbcbfd21"
version = "0.6.4"

[[deps.LibCURL_jll]]
deps = ["Artifacts", "LibSSH2_jll", "Libdl", "MbedTLS_jll", "Zlib_jll", "nghttp2_jll"]
uuid = "deac9b47-8bc7-5906-a0fe-35ac56dc84c0"
version = "8.6.0+0"

[[deps.LibGit2]]
deps = ["Base64", "LibGit2_jll", "NetworkOptions", "Printf", "SHA"]
uuid = "76f85450-5226-5b5a-8eaa-529ad045b433"
version = "1.11.0"

[[deps.LibGit2_jll]]
deps = ["Artifacts", "LibSSH2_jll", "Libdl", "MbedTLS_jll"]
uuid = "e37daf67-58a4-590a-8e99-b0245dd2ffc5"
version = "1.7.2+0"

[[deps.LibSSH2_jll]]
deps = ["Artifacts", "Libdl", "MbedTLS_jll"]
uuid = "29816b5a-b9ab-546f-933c-edad1886dfa8"
version = "1.11.0+1"

[[deps.Libdl]]
uuid = "8f399da3-3557-5675-b5ff-fb832c97cbdb"
version = "1.11.0"

[[deps.LinearAlgebra]]
deps = ["Libdl", "OpenBLAS_jll", "libblastrampoline_jll"]
uuid = "37e2e46d-f89d-539d-b4ee-838fcccc9c8e"
version = "1.11.0"

[[deps.Logging]]
uuid = "56ddb016-857b-54e1-b83d-db4d58db5568"
version = "1.11.0"

[[deps.MIMEs]]
git-tree-sha1 = "c64d943587f7187e751162b3b84445bbbd79f691"
uuid = "6c6e2e6c-3030-632d-7369-2d6c69616d65"
version = "1.1.0"

[[deps.MacroTools]]
git-tree-sha1 = "1e0228a030642014fe5cfe68c2c0a818f9e3f522"
uuid = "1914dd2f-81c6-5fcd-8719-6d5c9610ff09"
version = "0.5.16"

[[deps.Markdown]]
deps = ["Base64"]
uuid = "d6f4376e-aef5-505a-96c1-9c027394607a"
version = "1.11.0"

[[deps.MbedTLS_jll]]
deps = ["Artifacts", "Libdl"]
uuid = "c8ffd9c3-330d-5841-b78e-0817d7145fa1"
version = "2.28.6+0"

[[deps.Mmap]]
uuid = "a63ad114-7e13-5084-954f-fe012c677804"
version = "1.11.0"

[[deps.MozillaCACerts_jll]]
uuid = "14a3606d-f60d-562e-9121-12d972cd8159"
version = "2023.12.12"

[[deps.NetworkOptions]]
uuid = "ca575930-c2e3-43a9-ace4-1e988b2c1908"
version = "1.2.0"

[[deps.OpenBLAS_jll]]
deps = ["Artifacts", "CompilerSupportLibraries_jll", "Libdl"]
uuid = "4536629a-c528-5b80-bd46-f80d51c5b363"
version = "0.3.27+1"

[[deps.OrderedCollections]]
git-tree-sha1 = "05868e21324cede2207c6f0f466b4bfef6d5e7ee"
uuid = "bac558e1-5e72-5ebc-8fee-abe8a469f55d"
version = "1.8.1"

[[deps.Parsers]]
deps = ["Dates", "PrecompileTools", "UUIDs"]
git-tree-sha1 = "7d2f8f21da5db6a806faf7b9b292296da42b2810"
uuid = "69de0a69-1ddd-5017-9359-2bf0b02dc9f0"
version = "2.8.3"

[[deps.Pkg]]
deps = ["Artifacts", "Dates", "Downloads", "FileWatching", "LibGit2", "Libdl", "Logging", "Markdown", "Printf", "Random", "SHA", "TOML", "Tar", "UUIDs", "p7zip_jll"]
uuid = "44cfe95a-1eb2-52ea-b672-e2afdf69b78f"
version = "1.11.0"

    [deps.Pkg.extensions]
    REPLExt = "REPL"

    [deps.Pkg.weakdeps]
    REPL = "3fa0cd96-eef1-5676-8a61-b3b8758bbffb"

[[deps.PlutoTeachingTools]]
deps = ["Downloads", "HypertextLiteral", "Latexify", "Markdown", "PlutoUI"]
git-tree-sha1 = "d0f6e09433d14161a24607268d89be104e743523"
uuid = "661c6b06-c737-4d37-b85c-46df65de6f69"
version = "0.4.4"

[[deps.PlutoUI]]
deps = ["AbstractPlutoDingetjes", "Base64", "ColorTypes", "Dates", "Downloads", "FixedPointNumbers", "Hyperscript", "HypertextLiteral", "IOCapture", "InteractiveUtils", "JSON", "Logging", "MIMEs", "Markdown", "Random", "Reexport", "URIs", "UUIDs"]
git-tree-sha1 = "2d7662f95eafd3b6c346acdbfc11a762a2256375"
uuid = "7f904dfe-b85e-4ff6-b463-dae2292396a8"
version = "0.7.69"

[[deps.PrecompileTools]]
deps = ["Preferences"]
git-tree-sha1 = "5aa36f7049a63a1528fe8f7c3f2113413ffd4e1f"
uuid = "aea7be01-6a6a-4083-8856-8a6e6704d82a"
version = "1.2.1"

[[deps.Preferences]]
deps = ["TOML"]
git-tree-sha1 = "9306f6085165d270f7e3db02af26a400d580f5c6"
uuid = "21216c6a-2e73-6563-6e65-726566657250"
version = "1.4.3"

[[deps.Printf]]
deps = ["Unicode"]
uuid = "de0858da-6303-5e67-8744-51eddeeeb8d7"
version = "1.11.0"

[[deps.Random]]
deps = ["SHA"]
uuid = "9a3f8284-a2c9-5f02-9a11-845980a1fd5c"
version = "1.11.0"

[[deps.Reexport]]
git-tree-sha1 = "45e428421666073eab6f2da5c9d310d99bb12f9b"
uuid = "189a3867-3050-52da-a836-e630ba90ab69"
version = "1.2.2"

[[deps.Requires]]
deps = ["UUIDs"]
git-tree-sha1 = "62389eeff14780bfe55195b7204c0d8738436d64"
uuid = "ae029012-a4dd-5104-9daa-d747884805df"
version = "1.3.1"

[[deps.SHA]]
uuid = "ea8e919c-243c-51af-8825-aaa63cd721ce"
version = "0.7.0"

[[deps.Serialization]]
uuid = "9e88b42a-f829-5b0c-bbe9-9e923198166b"
version = "1.11.0"

[[deps.Statistics]]
deps = ["LinearAlgebra"]
git-tree-sha1 = "ae3bb1eb3bba077cd276bc5cfc337cc65c3075c0"
uuid = "10745b16-79ce-11e8-11f9-7d13ad32a3b2"
version = "1.11.1"

    [deps.Statistics.extensions]
    SparseArraysExt = ["SparseArrays"]

    [deps.Statistics.weakdeps]
    SparseArrays = "2f01184e-e22b-5df5-ae63-d93ebab69eaf"

[[deps.TOML]]
deps = ["Dates"]
uuid = "fa267f1f-6049-4f14-aa54-33bafae1ed76"
version = "1.0.3"

[[deps.Tar]]
deps = ["ArgTools", "SHA"]
uuid = "a4e569a6-e804-4fa4-b0f3-eef7a1d5b13e"
version = "1.10.0"

[[deps.Test]]
deps = ["InteractiveUtils", "Logging", "Random", "Serialization"]
uuid = "8dfed614-e22c-5e08-85e1-65c5234f0b40"
version = "1.11.0"

[[deps.Tricks]]
git-tree-sha1 = "0fc001395447da85495b7fef1dfae9789fdd6e31"
uuid = "410a4b4d-49e4-4fbc-ab6d-cb71b17b3775"
version = "0.1.11"

[[deps.URIs]]
git-tree-sha1 = "bef26fb046d031353ef97a82e3fdb6afe7f21b1a"
uuid = "5c2747f8-b7ea-4ff2-ba2e-563bfd36b1d4"
version = "1.6.1"

[[deps.UUIDs]]
deps = ["Random", "SHA"]
uuid = "cf7118a7-6976-5b1a-9a39-7adc72f591a4"
version = "1.11.0"

[[deps.Unicode]]
uuid = "4ec0a83e-493e-50e2-b9ac-8f72acf5a8f5"
version = "1.11.0"

[[deps.Zlib_jll]]
deps = ["Libdl"]
uuid = "83775a58-1f1d-513f-b197-d71354ab007a"
version = "1.2.13+1"

[[deps.libblastrampoline_jll]]
deps = ["Artifacts", "Libdl"]
uuid = "8e850b90-86db-534c-a0d3-1478176c7d93"
version = "5.11.0+0"

[[deps.nghttp2_jll]]
deps = ["Artifacts", "Libdl"]
uuid = "8e850ede-7688-5339-a07c-302acd2aaf8d"
version = "1.59.0+0"

[[deps.p7zip_jll]]
deps = ["Artifacts", "Libdl"]
uuid = "3f19e933-33d8-53b3-aaab-bd5110c3b7a0"
version = "17.4.0+2"
"""

# ╔═╡ Cell order:
# ╟─9021f1a2-276c-43f7-93c0-cdc1f37761d3
# ╟─1f47354d-84a5-49c7-b9ea-8adeb8c38688
# ╟─9e43ec14-b13f-41f4-a21f-1f526d72bbfd
# ╟─6246baef-cfee-4de3-bbcb-ff0768381a48
# ╟─f7d34f2f-6515-4d50-9896-8663ab03a101
# ╟─c3c5f458-2658-460a-9efd-b4fa4c2d9d87
# ╟─3a6633cc-4019-4f3a-a01d-66acb8fb5689
# ╠═4f0474b0-84bd-44b5-94da-5cfb5f2fb554
# ╟─cdcee303-54b0-4038-a4bb-ea6e150613bf
# ╟─908385ad-2705-4d31-9a6a-53a7066818e9
# ╟─6d3faf15-5377-4b54-ac2b-410ecf868f63
# ╟─4b7476e4-c67a-4f1d-a7bf-26e49083c93c
# ╟─1b8a99c7-ea73-4994-a2f1-19952594d9fc
# ╟─eae9f0d4-db52-4370-ad99-bb1fb14ea983
# ╟─9026b9ff-5f36-4ced-b5da-47eb26c8f602
# ╟─8fda5517-9c76-4745-b9ef-2522ebf5f435
# ╟─8286b631-e425-4752-af11-cf47ffedaed0
# ╟─71c7d88e-d1b2-4edc-85e0-d9eee0501568
# ╟─90be0711-eab3-4dd1-bc29-9c1e359844aa
# ╟─2096c0e1-c4ff-48ea-92d7-901600a81478
# ╟─fff20a37-b6c3-4d4a-8c38-9d219e1398b8
# ╟─2db39ee2-b2ae-4da9-b392-3f0cec8d5c5f
# ╟─6cf91cde-9be7-4ee7-9be2-dd1280aa85b0
# ╟─5465e414-7512-4730-97e9-ea6337014d9c
# ╠═18639f03-2f8d-4781-b7e2-483979e3d208
# ╟─00000000-0000-0000-0000-000000000001
# ╟─00000000-0000-0000-0000-000000000002
